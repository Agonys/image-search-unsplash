{"version":3,"sources":["assets/images/search.svg","assets/images/zoom-in.svg","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","api/api.js","components/ImageGallery/ImageGallery.styled.js","components/NoImagesFound/NoImagesFound.styled.js","components/NoImagesFound/NoImagesFound.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","styled","nav","Form","form","Input","input","Button","button","HintsList","ul","SearchBar","handleCloseHintList","e","hintsListRef","current","contains","target","setState","hintsLoading","hints","handleOnChange","newTerm","value","clearTimeout","typingTimer","length","setTimeout","fetchHints","handleFormSubmit","preventDefault","searchTerm","inputRef","props","history","push","formReset","formRef","reset","handleHintClick","word","a","fetch","searchAPI","then","data","json","response","slice","state","createRef","document","addEventListener","this","ref","onSubmit","type","width","height","src","searchIcon","alt","placeholder","onChange","required","map","hint","key","className","onClick","Component","withRouter","unsplash","Unsplash","accessKey","timeout","H2","h2","GalleryCotainer","div","Gallery","section","ImageContainer","DarkOverlay","Warning","h1","NoImagesFound","ImageGallery","fetchData","search","photos","results","areImagesLoading","match","params","prevProps","prevTerm","nextTerm","photosList","searchHeader","photo","photoID","id","photoURL","urls","raw","photoAlt","alt_description","to","pathname","background","location","image","paddingBottom","toPrecision","maxWidth","data-photo-id","zoomInIcon","PureComponent","StyledModal","ModalContainer","ExitButton","A","AuthorAvatar","img","Location","Photo","PhotoContainer","PhotoDesktop","PhotoMobile","Modal","fetchLocation","imageID","getPhoto","name","author","user","link","links","html","avatar","profile_image","medium","handleCloseModal","modalContainer","goBack","modifyImagesDimension","photoDesktopContainer","querySelectorAll","forEach","container","style","photoRef","body","classList","add","remove","removeEventListener","href","rel","App","Helmet","content","exact","path","component","React","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ac5d9b2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.504ddb8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-in.7d3ea534.svg\";","import styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n   width: 100%;\r\n   padding: 20px 15px 0;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n   margin: 0 auto;\r\n   height: 40px;\r\n   display: grid;\r\n   grid-template-columns: auto 1fr;\r\n   grid-auto-rows: 40px auto;\r\n   background-color: white;\r\n   width: 100%;\r\n   position: relative;\r\n   border-radius: 20px;\r\n   box-shadow: 1px 1px 3px rgb(0 0 0 / 0.3);\r\n   max-width: 1200px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n   flex-grow: 1;\r\n   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n     'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n     sans-serif;\r\n   border: 0;\r\n   height: 100%;\r\n   width: 100%;\r\n   background-color: initial;\r\n   padding: 0 10px 0 0;\r\n\r\n   &:focus {\r\n      outline: 0;\r\n   }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n   cursor: pointer;\r\n   background-color: initial;\r\n   margin: 0;\r\n   padding: 0;\r\n   border: 0;\r\n   padding: 0 10px 0 15px;\r\n   display: flex;\r\n   align-items: center;\r\n\r\n   &:focus { outline: 0 }\r\n`;\r\n\r\nexport const HintsList = styled.ul`\r\n   position: relative;\r\n   top: 3px;\r\n   width: 100%;\r\n   grid-column-start: 1;\r\n   grid-column-end: 3;\r\n   margin: 0;\r\n   padding: 0;\r\n   background-color: white;\r\n   border: 1px solid #d6d6d6;\r\n   border-radius: 3px;\r\n   list-style: none;\r\n   z-index: 1;\r\n\r\n   li {\r\n      padding: 5px 10px;\r\n\r\n      &.option {\r\n         cursor: pointer;\r\n\r\n         &:hover { background-color: #f5f5f5 }\r\n      }\r\n\r\n   }\r\n`;\r\n","import React, { Component, createRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Nav, Form, Input, Button, HintsList } from './SearchBar.styled';\r\nimport searchIcon from 'assets/images/search.svg';\r\n\r\nclass SearchBar extends Component {\r\n   constructor() {\r\n      super();\r\n\r\n      this.state = {\r\n         hintsLoading: true,\r\n         hints: [],\r\n      }\r\n\r\n      this.formRef = createRef(null);\r\n      this.inputRef = createRef(null);\r\n      this.hintsListRef = createRef(null);\r\n      this.typingTimer = null;\r\n      this.searchAPI = 'https://api.datamuse.com/sug?s=';\r\n   }\r\n\r\n   componentDidMount() {\r\n      document.addEventListener(\"mousedown\", e => this.handleCloseHintList(e));\r\n   }\r\n\r\n   handleCloseHintList = e => {\r\n      if(this.hintsListRef.current && !this.hintsListRef.current.contains(e.target)) {\r\n         this.setState({\r\n            hintsLoading: true,\r\n            hints: [],\r\n         })\r\n      }\r\n   }\r\n\r\n   //handling user typing.\r\n   handleOnChange = e => {\r\n      const newTerm = e.target.value;\r\n      clearTimeout(this.typingTimer);\r\n\r\n      if(newTerm.length >= 3)\r\n         this.typingTimer = setTimeout(() => this.fetchHints(newTerm), 500);\r\n      else\r\n         this.setState({\r\n            hintsLoading: true,\r\n            hints: [],\r\n         })\r\n   }\r\n\r\n   handleFormSubmit = e => {\r\n      e.preventDefault();\r\n      const searchTerm = this.inputRef.current.value;\r\n      this.props.history.push(`/search/${searchTerm}`);\r\n      this.formReset();\r\n   }\r\n\r\n   //form reset used within form submittion.\r\n   formReset = () => {\r\n      clearTimeout(this.typingTimer);\r\n      this.formRef.current.reset();\r\n      this.setState({\r\n         hintsLoading: true,\r\n         hints: [],\r\n      })\r\n   }\r\n\r\n   handleHintClick = word => {\r\n      this.props.history.push(`/search/${word}`);\r\n      this.formReset();\r\n   }\r\n\r\n   fetchHints = async (searchTerm) => {\r\n      await fetch(`${this.searchAPI}${searchTerm}`)\r\n         .then(data => data.json())\r\n         .then(response => {\r\n            this.setState({\r\n               hintsLoading: false,\r\n               hints: response.slice(0,5),\r\n            });\r\n         });\r\n   }\r\n\r\n\r\n   render() {\r\n      const { hintsLoading, hints } = this.state;\r\n\r\n      return (\r\n         <Nav>\r\n            <h1>Search from many beautiful images.</h1>\r\n            <Form ref={this.formRef} onSubmit={e => this.handleFormSubmit(e)}>\r\n               <Button type='submit'>\r\n                  <img width='16' height='16' src={searchIcon} alt='' />\r\n               </Button>\r\n               <Input\r\n                  type='text'\r\n                  ref={this.inputRef}\r\n                  placeholder=\"Search photos...\"\r\n                  onChange={this.handleOnChange}\r\n                  required />\r\n\r\n               {!hintsLoading &&\r\n                  <HintsList ref={this.hintsListRef}>\r\n                     {\r\n                        hints.length\r\n                           ? hints.map(hint => {\r\n                              return <li\r\n                                 key={hint.word}\r\n                                 className=\"option\"\r\n                                 onClick={() => this.handleHintClick(hint.word)}>{hint.word}</li>\r\n                           })\r\n                           : <li>No matches found...</li>\r\n                     }\r\n                  </HintsList>\r\n               }\r\n            </Form>\r\n         </Nav>\r\n      )\r\n   }\r\n}\r\n\r\nexport default withRouter(SearchBar);\r\n","import Unsplash from 'unsplash-js';\r\n\r\nconst unsplash = new Unsplash({\r\n   accessKey: 'oZlj3lUaSwhVnyul8EKOgeq4GBCJljoGVJ3D6oYPH6E',\r\n   timeout: 10000,\r\n})\r\n\r\nexport default unsplash;\r\n","import styled from 'styled-components';\r\n\r\nexport const H2 = styled.h2`\r\n   margin: 20px 0 20px 15px;\r\n\r\n   &.loading {\r\n      text-align: center;\r\n   }\r\n\r\n   @media screen and (min-width: 768px) { margin: 20px 0 }\r\n`;\r\n\r\nexport const GalleryCotainer = styled.div`\r\n   @media screen and (min-width: 768px) { padding: 0 15px }\r\n`;\r\n\r\nexport const Gallery = styled.section`\r\n   width: 100%;\r\n   column-count: 1;\r\n   column-gap: 20px;\r\n   max-width: 1200px;\r\n   margin: 0 auto;\r\n\r\n   @media screen and (min-width: 768px) { column-count: 2 }\r\n   @media screen and (min-width: 992px) { column-count: 3 }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n   -webkit-column-break-inside: avoid;\r\n   width: 100%;\r\n   padding-bottom: 40px;\r\n   cursor: zoom-in;\r\n\r\n   figure {\r\n      margin: 0;\r\n      display: flex;\r\n      justify-content: center;\r\n      position: relative;\r\n      transition: all .2s ease-in-out;\r\n\r\n      > img {\r\n         width: 100%;\r\n         height: auto;\r\n      }\r\n\r\n      &:hover {\r\n         transform: scale(1.02);\r\n\r\n         > div {\r\n            opacity: 1;\r\n         }\r\n      }\r\n   }\r\n`;\r\n\r\nexport const DarkOverlay = styled.div`\r\n   position: absolute;\r\n   width: 100%;\r\n   height: 100%;\r\n   background-color: rgba(0 0 0 / 0.3);\r\n   opacity: 0;\r\n   transition: all .2s ease-in-out;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n\r\n   img {\r\n      width: 48px;\r\n      height: 48px;\r\n   }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Warning = styled.h1`\r\n   text-align: center;\r\n   font-size: 30px;\r\n`;\r\n","import React from 'react';\r\nimport { Warning } from './NoImagesFound.styled';\r\n\r\nconst NoImagesFound = ({ searchTerm }) => {\r\n   return <Warning>No Images found with '{searchTerm}'...</Warning>\r\n}\r\n\r\nexport default NoImagesFound;\r\n","import React, { PureComponent } from 'react';\r\nimport unsplash from 'api/api';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { H2, GalleryCotainer, Gallery, ImageContainer, DarkOverlay } from './ImageGallery.styled';\r\nimport NoImagesFound from 'components/NoImagesFound/NoImagesFound';\r\nimport zoomInIcon from 'assets/images/zoom-in.svg';\r\n\r\nclass ImageGallery extends PureComponent {\r\n   constructor() {\r\n      super();\r\n\r\n      this.state = {\r\n         areImagesLoading: true,\r\n         photos: [],\r\n      }\r\n   }\r\n\r\n   fetchData = async (searchTerm) => {\r\n      return await unsplash.search.photos(searchTerm, 1, 25)\r\n         .then(data => data.json())\r\n         .then(({ results }) => {\r\n            this.setState({\r\n               photos: results,\r\n               areImagesLoading: false,\r\n            });\r\n         });\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.fetchData(this.props.match.params.searchTerm);\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      const prevTerm = prevProps.match.params.searchTerm;\r\n      const nextTerm = this.props.match.params.searchTerm;\r\n      if(prevTerm !== nextTerm) {\r\n         this.setState({ areImagesLoading: true });\r\n         this.fetchData(nextTerm);\r\n      }\r\n   }\r\n\r\n   render() {\r\n\r\n      const { photos, areImagesLoading } = this.state;\r\n      let photosList, searchHeader;\r\n      const searchTerm = this.props.match.params.searchTerm;\r\n\r\n      if(photos.length) {\r\n         photosList = photos.map(photo => {\r\n            const photoID = photo.id;\r\n            const photoURL = `${photo.urls.raw}&auto=format&fit=crop&w=400&q=60`;\r\n            const photoAlt = photo.alt_description;\r\n\r\n            return (\r\n               <Link\r\n                  key={photoID}\r\n                  to={{\r\n                     pathname: `/photo/${photoID}`,\r\n                     state: {\r\n                        background: this.props.location,\r\n                        image: {\r\n                           src: `${photo.urls.raw}&auto=format&fit=crop&w=1100&q=60`,\r\n                           id: photoID,\r\n                           alt: photoAlt,\r\n                           paddingBottom: (photo.height / photo.width * 100).toPrecision(4),\r\n                           maxWidth: (photo.width / photo.height).toPrecision(4),\r\n                        }\r\n                     }\r\n                  }}>\r\n                  <ImageContainer key={photoID}>\r\n                     <figure data-photo-id={photoID}>\r\n\r\n                        <img src={photoURL} alt={photoAlt} />\r\n                        <DarkOverlay>\r\n                           <img src={zoomInIcon} alt='zoom in' />\r\n                        </DarkOverlay>\r\n\r\n                     </figure>\r\n                  </ImageContainer>\r\n               </Link>\r\n            )\r\n         });\r\n         searchHeader = <H2>{searchTerm}</H2>;\r\n\r\n      } else {\r\n         searchHeader = <NoImagesFound searchTerm={searchTerm} />;\r\n      }\r\n\r\n      return (\r\n         <GalleryCotainer>\r\n            {areImagesLoading\r\n               ? <H2 className=\"loading\">Loading...</H2>\r\n               : <>\r\n                  {searchHeader}\r\n                  {photosList ? <Gallery>{photosList}</Gallery> : null}\r\n               </>\r\n            }\r\n         </GalleryCotainer>\r\n      )\r\n   }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledModal = styled.div`\r\n   overflow-x: hidden;\r\n   position: fixed;\r\n   left: 0;\r\n   right: 0;\r\n   top: 0;\r\n   bottom: 0;\r\n   background-color: rgba(0 0 0 / 0.7);\r\n   cursor: zoom-out;\r\n   padding: 48px 0 0;\r\n\r\n   @media screen and (min-width: 768px) {\r\n      padding: 50px 100px;\r\n   }\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n   cursor: initial;\r\n   width: 100%;\r\n   height: fit-content;\r\n   background-color: white;\r\n   padding: 20px 0;\r\n   max-width: 1200px;\r\n   margin: 0 auto;\r\n   display: flex;\r\n   flex-direction: column;\r\n\r\n   @media screen and (min-width: 768px) {\r\n      padding: 30px;\r\n   }\r\n`;\r\n\r\nexport const ExitButton = styled.div`\r\n   position: absolute;\r\n   left: 0;\r\n   top: 0;\r\n   cursor: pointer;\r\n   display: flex;\r\n   flex-direction: column;\r\n   justify-content: center;\r\n   align-items: center;\r\n   height: 48px;\r\n   width: 48px;\r\n\r\n   div {\r\n      width: 32px;\r\n      height: 3px;\r\n      background-color: white;\r\n      transform: rotate(-45deg);\r\n      transform-origin: 18px;\r\n      border-radius: 30px;\r\n      position: relative;\r\n      left: -1px;\r\n   }\r\n\r\n   div:last-of-type {\r\n      transform: rotate(45deg);\r\n   }\r\n\r\n`;\r\n\r\nexport const A = styled.a`\r\n   font-weight: 500;\r\n   padding: 0 15px;\r\n   display: flex;\r\n   align-items: center;\r\n\r\n   @media screen and (min-width: 768px) { padding: 0 }\r\n`;\r\n\r\nexport const AuthorAvatar = styled.img`\r\n   width: 32px;\r\n   height: 32px;\r\n   border-radius: 50%;\r\n   margin-right: 10px;\r\n`;\r\n\r\nexport const Location = styled.div`\r\n   padding: 0 15px;\r\n   font-weight: 500;\r\n   font-size: 14px;\r\n   text-align: right;\r\n\r\n   @media screen and (min-width: 768px) { padding: 0 }\r\n`;\r\n\r\nexport const Photo = styled.img`\r\n   width: 100%;\r\n   height: 100%;\r\n`;\r\n\r\nexport const PhotoContainer = styled.div`\r\n   padding: 15px 0;\r\n\r\n   .photoContainer {\r\n      position: relative;\r\n      img { position: absolute };\r\n   }\r\n`;\r\n\r\nexport const PhotoDesktop = styled.div`\r\n   display: none;\r\n   margin: 0 auto;\r\n   @media screen and (min-width: 768px) { display: block }\r\n`;\r\n\r\nexport const PhotoMobile = styled.div`\r\n   display: none;\r\n   @media screen and (max-width: 767px) { display: block }\r\n`;\r\n","import React, { Component, createRef } from 'react';\r\nimport {\r\n   StyledModal,\r\n   ModalContainer,\r\n   ExitButton,\r\n   A,\r\n   AuthorAvatar,\r\n   Location,\r\n   Photo,\r\n   PhotoContainer,\r\n   PhotoMobile,\r\n   PhotoDesktop } from './Modal.styled';\r\nimport unsplash from 'api/api';\r\n\r\nclass Modal extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n         location: [],\r\n         author: {\r\n            name: '',\r\n            link: '',\r\n            avatar: '',\r\n         }\r\n      }\r\n\r\n      this.modalContainer = createRef(null);\r\n      this.photoRef = createRef(null);\r\n\r\n      this.photoDesktopContainer = createRef(null);\r\n\r\n\r\n      this.image = {\r\n         id: this.props.location.state.image.id,\r\n         src: this.props.location.state.image.src,\r\n         alt: this.props.location.state.image.alt,\r\n         paddingBottom: this.props.location.state.image.paddingBottom,\r\n         maxWidth: this.props.location.state.image.maxWidth,\r\n      }\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.fetchLocation(this.image.id);\r\n\r\n      this.modifyImagesDimension();\r\n\r\n      document.body.classList.add(\"lockedOverflow\");\r\n      document.addEventListener('mousedown', this.handleCloseModal);\r\n   }\r\n\r\n   componentWillUnmount() {\r\n      document.body.classList.remove(\"lockedOverflow\");\r\n      document.removeEventListener('mousedown', this.handleCloseModal);\r\n   }\r\n\r\n   //fetch data about image to get location and author information.\r\n   fetchLocation = async (imageID) => {\r\n      await unsplash.photos.getPhoto(imageID)\r\n         .then(data => data.json())\r\n         .then(photo => {\r\n            this.setState({\r\n               location: photo.location.name,\r\n               author: {\r\n                  name: photo.user.name,\r\n                  link: photo.user.links.html,\r\n                  avatar: photo.user.profile_image.medium,\r\n               }\r\n            })\r\n         });\r\n   }\r\n\r\n   //if user click outside of modal.\r\n   handleCloseModal = e => {\r\n      if(this.modalContainer.current && !this.modalContainer.current.contains(e.target)) {\r\n         this.props.history.goBack();\r\n      }\r\n   }\r\n\r\n   //modify images boundaries for multiple devices.\r\n   modifyImagesDimension = () => {\r\n      const photoDesktopContainer = this.photoDesktopContainer.current;\r\n      const { paddingBottom, maxWidth } = this.image;\r\n\r\n\r\n      //set padding-bottom for every photo container.\r\n      const photoContainers = [...document.querySelectorAll(\".photoContainer\")];\r\n      photoContainers.forEach(container => {\r\n         container.style.paddingBottom = `${paddingBottom}%`;\r\n      })\r\n\r\n      //set max-width for images to prevent stretching outside monitor view.\r\n      photoDesktopContainer.style.maxWidth = `calc((100vh - 250px) * ${maxWidth})`;\r\n   }\r\n\r\n   render() {\r\n      const { location, author } = this.state;\r\n\r\n      return (\r\n         <StyledModal>\r\n            <ExitButton>\r\n               <div />\r\n               <div />\r\n            </ExitButton>\r\n\r\n            <ModalContainer ref={this.modalContainer}>\r\n               <A href={author.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <AuthorAvatar src={author.avatar} alt={author.name} />\r\n                  {author.name}\r\n               </A>\r\n\r\n               <PhotoContainer>\r\n                  <PhotoMobile className=\"photoContainer\">\r\n                     <Photo\r\n                        ref={this.photoRef}\r\n                        src={this.image.src}\r\n                        alt={this.image.alt} />\r\n                  </PhotoMobile>\r\n\r\n                  <PhotoDesktop ref={this.photoDesktopContainer}>\r\n                     <div className=\"photoContainer\">\r\n                        <Photo\r\n                           ref={this.photoRef}\r\n                           src={this.image.src}\r\n                           alt={this.image.alt} />\r\n                     </div>\r\n                  </PhotoDesktop>\r\n               </PhotoContainer>\r\n\r\n               <Location>\r\n                  {location ? location : \"unknown location\"}\r\n               </Location>\r\n            </ModalContainer>\r\n         </StyledModal>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport SearchBar from 'components/SearchBar/SearchBar';\r\nimport ImageGallery from 'components/ImageGallery/ImageGallery';\r\nimport Modal from 'components/Modal/Modal';\r\n\r\nclass App extends React.Component {\r\n   render() {\r\n      const { location } = this.props;\r\n      const background = location.state && location.state.background;\r\n\r\n      return (\r\n         <>\r\n            <Helmet>\r\n               <title>Image search App | Unsplash API</title>\r\n               <meta\r\n               name=\"description\"\r\n               content=\"React app for image search using Unsplash API\"\r\n               />\r\n            </Helmet>\r\n\r\n            <div className=\"App\">\r\n               <SearchBar />\r\n               <Switch location={ background || location }>\r\n                  <Route\r\n                     exact path='/search/:searchTerm'\r\n                     component={ImageGallery} />\r\n               </Switch>\r\n\r\n               { background &&\r\n                  <Route path='/photo/:imageId'>\r\n                     <Modal {...this.props} />\r\n                  </Route>\r\n               }\r\n            </div>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n   <HashRouter>\r\n      <App />\r\n   </HashRouter>,\r\n   document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}